apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "postgresnaut.fullname" . }}
  labels:
    {{- include "postgresnaut.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "postgresnaut.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "postgresnaut.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "postgresnaut.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - image: jaegertracing/jaeger-agent
          name: {{ .Chart.Name }}-jaeger-agent
          ports:
            - containerPort: 5775
              protocol: UDP
            - containerPort: 6831
              protocol: UDP
            - containerPort: 6832
              protocol: UDP
            - containerPort: 5778
              protocol: TCP
          args: ["--reporter.type=grpc","--reporter.grpc.host-port={{ .Values.jaeger.collector.host }}:{{ .Values.jaeger.collector.port }}"]
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args: ["-Dio.netty.allocator.maxOrder=7","-Dio.netty.allocator.numHeapArenas=2","-Dio.netty.allocator.numDirectArenas=2","-Dio.netty.recycler.maxCapacityPerThread=0"]
          env:
            - name: DATASOURCES_DEFAULT_URL
              value: jdbc:postgresql://{{ .Release.Name }}-postgresql:5432/{{ .Values.postgresql.postgresqlDatabase }}
            - name: DATASOURCES_DEFAULT_USERNAME
              value: {{ .Values.postgresql.postgresqlUsername }}
            - name: DATASOURCES_DEFAULT_PASSWORD
              value: {{ .Values.postgresql.postgresqlPassword }}
            - name: DATASOURCES_DEFAULT_DRIVERCLASSNAME
              value: org.postgresql.Driver
            - name: JAEGER_AGENT_HOST
              value: {{ .Values.jaeger.agent.host }}
            - name: JAEGER_AGENT_PORT
              value: "{{ .Values.jaeger.agent.port }}"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health/liveness
              port: http
          readinessProbe:
            httpGet:
              path: /health/readiness
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
